export default {"href":"/techniques/requirement-conversion","html":"<h1>How to Write a Good Technical Requirement for a Non-Functional Requirement</h1>\n\n    <p>When writing technical requirements, it is important to focus on both functional and non-functional requirements. Non-functional requirements (NFRs) describe the qualities that a system should have, such as performance, security, and reliability. However, it can be difficult to translate these NFRs into functional requirements that meet the needs of specific users. In this article, we will explore how to write a good technical requirement for an NFR, with a focus on converting it into a functional requirement for a specific user.</p>\n    \n    <h2>Step 1: Identify the Non-Functional Requirement</h2>\n    \n    <p>For this example, let's say that the NFR is the need for a server that can host a mySQL database. This requirement is not related to a specific user, but rather to the overall functionality of the system.</p>\n    \n    <h2>Step 2: Identify the User</h2>\n    \n    <p>Next, we need to identify the user who will be affected by this requirement. In this case, let's say that the user is a database administrator.</p>\n    \n    <h2>Step 3: Define the Functional Requirement</h2>\n    \n    <p>Now that we have identified the user, we can define the functional requirement that meets their needs. The functional requirement for the database administrator might be: \"The server must be able to host a mySQL database with a minimum of 10,000 transactions per second.\"</p>\n    \n    <h2>Step 4: Specify the Technical Requirement</h2>\n    \n    <p>Finally, we need to specify the technical requirement that will enable the system to meet the functional requirement. The technical requirement might be: \"The server must have at least 16 cores, 64 GB of RAM, and a RAID 10 array with a minimum of 8 disks.\"</p>\n    \n    <h2>Conclusion</h2>\n    \n    <p>By following these steps, we can convert a non-functional requirement into a functional requirement that meets the needs of a specific user. By defining the functional requirement first, we can ensure that we are meeting the user's needs, and by specifying the technical requirement second, we can ensure that the system will have the necessary qualities to meet those needs. With a clear understanding of the user's requirements and the technical specifications needed to fulfill them, we can create a robust and effective system.</p>","displayShareLinks":true};