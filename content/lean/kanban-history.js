export default {"href":"/lean/kanban-history","html":"<h1>Kanban: A Lean Manufacturing Scheduling System</h1>\n\n    <h2>Background</h2>\n  <p>Kanban, a scheduling system for lean manufacturing (also known as just-in-time manufacturing or JIT), was developed by Taiichi Ohno, an industrial engineer at Toyota, to improve manufacturing efficiency. The system takes its name from the cards used to track production within a factory, and is also known as the Toyota nameplate system in the automotive industry. </p>\n  <p>One of the main benefits of Kanban is its ability to establish an upper limit to work in process (WIP) inventory to avoid overcapacity. Problem areas are highlighted by measuring lead time and cycle time of the full process and process steps. A goal of the Kanban system is to limit the buildup of excess inventory at any point in production. Whenever a limit is exceeded, this points to an inefficiency that should be addressed.</p>\n  <p>The origins of the Kanban system can be traced back to the simplest visual stock replenishment signaling system: an empty box. This was first developed in UK factories producing Spitfires during the Second World War, and was known as the \"two-bin system.\" In the late 1940s, Toyota began studying supermarkets with the idea of applying shelf-stocking techniques to the factory floor. This observation led Toyota to view a process as being a customer of one or more preceding processes, and to view the preceding processes as a kind of store.</p>\n  <p>Kanban aligns inventory levels with actual consumption. A signal tells a supplier to produce and deliver a new shipment when a material is consumed. This signal is tracked through the replenishment cycle, bringing visibility to the supplier, consumer, and buyer. Kanban uses the rate of demand to control the rate of production, passing demand from the end customer up through the chain of customer-store processes. In 1953, Toyota applied this logic in their main plant machine shop.</p>\n  \n  <div>\n  <h2>Ohno Taiichi: Father of the Toyota Production System</h2>\n  <p>Ohno Taiichi (大野耐一, Ōno Taiichi, February 29, 1912 – May 28, 1990) was a Japanese industrial engineer and businessman who revolutionized manufacturing with the development of the Toyota Production System. </p>\n  <p>Ohno devised the concept of seven wastes (or muda in Japanese) which formed a crucial part of his system. He also wrote several books about the system, including \"Toyota Production System: Beyond Large-Scale Production.\"</p>\n  <h3>Life</h3>\n  <p>Born in 1912 in Dalian, China, and a graduate of the Nagoya Technical High School (Japan), Ohno joined the Toyoda family's Toyoda Spinning in 1932. He then moved to the Toyota motor company in 1943 where he gradually rose through the ranks to become an executive.</p>\n  <h3>Influence</h3>\n  <p>Ohno's principles not only transformed the manufacturing industry but also influenced areas outside of it. For example, the concept of Just In Time (JIT) has been applied to improve sales, marketing, and customer service processes.</p>\n  <h3>Seven Wastes</h3>\n  <p>Ohno's \"Seven Wastes\" model has become a core concept in many academic approaches. These wastes include delay, producing more than needed, over processing, transportation, unnecessary movement, inventory, and defects in the product.</p>\n  <h3>Ten Precepts</h3>\n  <p>Ohno is also known for his \"Ten Precepts\" to think and act to win:</p>\n  <ol>\n  <li>You are a cost. First reduce waste.</li>\n  <li>First say, \"I can do it.\" And try before everything.</li>\n  <li>The workplace is a teacher. You can find answers only in the workplace.</li>\n  <li>Do anything immediately. Starting something right now is the only way to win.</li>\n  <li>Once you start something, persevere with it. Do not give up until you finish it.</li>\n  <li>Explain difficult things in an easy-to-understand manner. Repeat things that are easy to understand.</li>\n  <li>Waste is hidden. Do not hide it. Make problems visible.</li>\n  <li>Valueless motions are equal to shortening one's life.</li>\n  <li>Re-improve what was improved for further improvement.</li>\n  <li>Wisdom is given equally to everybody. The point is whether one can exercise it.</li>\n</ol>\n</div>\n\n\n  <h2>Toyota's 6 Rules</h2>\n  <p>Toyota's production system is known for its efficiency, and it is based on six rules that govern the way work is done. These rules are:</p>\n  <ol>\n    <li>Each process issues requests (kanban) to its suppliers when it consumes its supplies.</li>\n    <li>Each process produces according to the quantity and sequence of incoming requests.</li>\n    <li>No items are made or transported without a request.</li>\n    <li>The request associated with an item is always attached to it.</li>\n    <li>Processes must not send out defective items, to ensure that the finished products will be defect-free.</li>\n    <li>Limiting the number of pending requests makes the process more sensitive and reveals inefficiencies.</li>\n  </ol>\n  <p>These rules are designed to create a smooth, efficient production process that minimizes waste and defects. By using requests (kanban) to signal the need for supplies and production, each process is able to work in harmony with its suppliers and customers. This allows for just-in-time production, which minimizes inventory and reduces waste.</p>\n  <p>The requirement that each item has a request attached to it ensures that items are not produced or transported unnecessarily. This helps to reduce waste and ensures that the production process is aligned with customer demand.</p>\n  <p>By focusing on producing defect-free items, Toyota is able to maintain a high level of quality in its finished products. This reduces the need for rework and improves customer satisfaction.</p>\n  <p>Finally, by limiting the number of pending requests, the production process becomes more sensitive to inefficiencies. This allows Toyota to identify areas where improvements can be made, and make changes to continuously improve the production process.</p>\n\n\n  <h2>Applying Toyota's Six Rules to Software Development</h2>\n  <p>While Toyota's six rules were originally developed for lean manufacturing, they can also be applied to software development. By following these rules, teams can create a more efficient and effective software development process. Here's how:</p>\n  <ol>\n    <li><strong>Each process issues requests (kanban) to its suppliers when it consumes its supplies.</strong> In software development, this means that each team should clearly communicate their needs to other teams and stakeholders. This includes clearly defining requirements, dependencies, and timelines.</li>\n    <li><strong>Each process produces according to the quantity and sequence of incoming requests.</strong> This means that teams should prioritize their work based on the needs of other teams and the project as a whole. Teams should also be able to adapt to changing priorities and adjust their work accordingly.</li>\n    <li><strong>No items are made or transported without a request.</strong> In software development, this means that teams should avoid working on features or tasks that haven't been clearly defined and requested. This helps prevent wasted time and effort on work that may not be needed or useful.</li>\n    <li><strong>The request associated with an item is always attached to it.</strong> In software development, this means that requirements and requests should be clearly documented and tracked throughout the development process. This helps ensure that work is being done according to the agreed-upon specifications.</li>\n    <li><strong>Processes must not send out defective items, to ensure that the finished products will be defect-free.</strong> In software development, this means that teams should prioritize quality and testing throughout the development process. This helps prevent defects and issues from making it into the final product.</li>\n    <li><strong>Limiting the number of pending requests makes the process more sensitive and reveals inefficiencies.</strong> In software development, this means that teams should limit the amount of work in progress (WIP) to avoid overloading the team and causing inefficiencies. By limiting WIP, teams can focus on completing work more quickly and efficiently.</li>\n  </ol>\n\n  \n  ","displayShareLinks":true};